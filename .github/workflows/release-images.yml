# .github/workflows/release-images.yml
name: Build & Push Docker Images                # Name of the workflow

on:
  push:
    tags: ['v*.*.*']                            # Trigger workflow only when a git tag matching vX.X.X is pushed

jobs:                                           # Job named 'docker'
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read                            # Read access to repo contents
      packages: write                           # Write access to GitHub Packages (for pushing Docker images)

    steps:
      - uses: actions/checkout@v4               # Clone the repository

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}         # GitHub actor
          password: ${{ secrets.GITHUB_TOKEN }} # GitHub token to authenticate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push server
        uses: docker/build-push-action@v6
        with:
          context: ./server                     # Folder containing Dockerfile for server
          push: true                            # Push the built image to the registry
          tags: |
            ghcr.io/${{ github.repository }}/server:latest
            ghcr.io/${{ github.repository }}/server:${{ github.ref_name }}
          # Tags the image with 'latest' and also with the git tag (e.g., v1.2.3)

      - name: Build & push client
        uses: docker/build-push-action@v6
        with:
          context: ./client                     # Folder containing Dockerfile for client
          push: true                            # Push the built image to the registry
          build-args: |                         # Pass build arguments to Docker
            VITE_API_URL=/api                   # Environment variable for client build
          tags: |
            ghcr.io/${{ github.repository }}/client:latest
            ghcr.io/${{ github.repository }}/client:${{ github.ref_name }}
          # Tags the image with 'latest' and also with the git tag
