name: CI                                           # Workflow name

on:  
  push:
    branches: [ main ]                             # Trigger only on pushes to main
  pull_request:
    branches: [ main ]                             # Trigger on PRs targeting main

jobs:
  ci:
    runs-on: ubuntu-latest                         # Use latest Ubuntu runner, a virtual machine

    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
      
        options: >-                                # A health check to ensure MongoDB is ready before the job uses it
          --health-cmd="mongosh --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout                              # Steps are individual actions in the job–Step to clone the repo
        uses: actions/checkout@v4

      - name: Setup Node                            # Node.js version
        uses: actions/setup-node@v4                 # Cache npm dependencies
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            server/package-lock.json                # Caches dependencies to speed up future runs
            client/package-lock.json                # Specifies files that, when changed, will invalidate the cache

      # ---- Server: install + test ----         
      - name: Install server deps                   # Moves to the server folder and installs dependencies using npm ci
        working-directory: server
        run: npm ci                                 # Installs dependencies using npm ci (faster and more deterministic than npm install)

      - name: Wait for MongoDB                      # Waits for MongoDB to be ready before running tests
        run: |
          for i in {1..30}; do                      # Check if port 27017 is open–Loops up to 30 times, waiting 2 seconds each iteration
            nc -z 127.0.0.1 27017 && echo "Mongo up" && exit 0
            echo "Waiting for Mongo..."
            sleep 2
          done
          echo "Mongo failed to start" && exit 1

      - name: Test server (Jest + Supertest, real Mongo)    # Runs server tests and sets environment variables
        working-directory: server
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://127.0.0.1:27017/labassets_test
        run: npm test

      # ---- Client: install + build ----
      - name: Install client deps                   # Installs client dependencies
        working-directory: client
        run: npm ci

      - name: Build client (Vite)
        working-directory: client
        env:
          VITE_API_URL: http://localhost:4000/api
        run: npm run build
