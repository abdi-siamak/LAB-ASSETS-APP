# .github/workflows/ci.yml
name: CI                                           # Workflow name

on:
  push:
    branches: [ main ]                             # Trigger only on pushes to main
  pull_request:
    branches: [ main ]                             # Trigger on PRs targeting main

jobs:
  ci:
    runs-on: ubuntu-latest                         # Use latest Ubuntu runner, a virtual machine

    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017                            # Expose MongoDB to the job at 127.0.0.1:27017
        options: >-                                # Health check so steps wait for Mongo to be ready
          --health-cmd="mongosh --host 127.0.0.1 --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4                  # Pulls your repo to the runner

      # ---- Node toolchain (no cache + no lockfile requirement) ----
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22                         # Match previous runs that used Node 22

      # ---- Server: install + (optional) build + test ----
      - name: Install server deps                   # Installs server dependencies (no lockfile)
        working-directory: server
        run: npm install --no-audit --no-fund

      - name: Build server (if applicable)          # Safe if your server has no build step
        working-directory: server
        run: npm run build --if-present

      - name: Wait for Mongo                        # Simple check to ensure DB is reachable
        run: |
          echo "Waiting for Mongo..."
          sudo apt-get update -y
          sudo apt-get install -y netcat-openbsd
          for i in {1..60}; do
            nc -z 127.0.0.1 27017 && echo "Mongo is up!" && exit 0
            sleep 2
          done
          echo "Mongo did not become ready in time"; exit 1

      - name: Run server tests
        working-directory: server
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://127.0.0.1:27017/labassets_test
        run: npm test

      # ---- Client: install + build ----
      - name: Install client deps                   # Installs client dependencies (no lockfile)
        working-directory: client
        run: npm install --no-audit --no-fund

      - name: Build client (Vite)
        working-directory: client
        env:
          VITE_API_URL: http://localhost:4000/api
        run: npm run build
